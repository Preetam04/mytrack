// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  name     String?
  password String?
  provider Providers
  spaces   Space[]   @relation("hostedBy")
  streams  Stream[]  @relation("added")
  upvote   Upvote[]
}

model Space {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  hostId    String
  host      User     @relation("hostedBy", fields: [hostId], references: [id])
  isActive  Boolean  @default(false)
  streams   Stream[] @relation("spaceStreams")
}

model Stream {
  id          String   @id @default(uuid())
  name        String
  videoId     String
  thumbnail   String
  addedBy     String
  addedByUser User     @relation("added", fields: [addedBy], references: [id])
  spaceId     String
  upvote      Upvote[]
  space       Space    @relation("spaceStreams", fields: [spaceId], references: [id])
  createdAt   DateTime @default(now())
  played      Boolean  @default(false)
}

model Upvote {
  id       String @id @default(uuid())
  userId   String
  streamId String
  user     User   @relation(fields: [userId], references: [id])
  stream   Stream @relation(fields: [streamId], references: [id], onDelete: Cascade)

  @@unique([userId, streamId])
}

enum Providers {
  Google
  Credentials
}
